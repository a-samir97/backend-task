version: "3.9"
services:
  app:
    container_name: ruby_app
    build: .
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      db: 
        condition: service_healthy
      elasticsearch: 
        condition: service_healthy
    links:
      - db
      - redis 
    environment:
      DB_USER: root
      DB_NAME: chat_system
      DB_PASSWORD: password
      DB_HOST: db
      ELASTICSEARCH_URL: elasticsearch
      RAILS_ENV: development
      REDIS_URL: redis://redis:6379

  db:
    container_name: db
    platform: linux/x86_64
    image: mysql:5.7
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: password
        MYSQL_DATABASE: chat_system
        MYSQL_USER: user
        MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    container_name: redis
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 20
  
  sidekiq:
    container_name: sidekiq
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/app
    environment:
      REDIS_URL: redis://redis:6379
      RAILS_ENV: development
      DB_USER: root
      DB_NAME: chat_system
      DB_PASSWORD: password
      DB_HOST: db
      ELASTICSEARCH_URL: elasticsearch

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - "discovery.type=single-node"

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker_data/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 10s
      timeout: 10s
      retries: 5


volumes:
  db:
  redis:
  elasticsearch:
  sidekiq:
